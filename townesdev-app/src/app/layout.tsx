import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { getSEOConfig } from "../sanity/lib/seo";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export async function generateMetadata(): Promise<Metadata> {
  const seoConfig = await getSEOConfig();

  return {
    title: seoConfig?.siteTitle || "Create Next App",
    description: seoConfig?.metaDescription || "Generated by create next app",
    keywords: seoConfig?.keywords,
    authors: seoConfig?.author ? [{ name: seoConfig.author }] : undefined,
    robots: seoConfig?.robots,
    openGraph: {
      title: seoConfig?.siteTitle,
      description: seoConfig?.metaDescription,
      images: seoConfig?.ogImage?.asset?.url ? [{ url: seoConfig.ogImage.asset.url }] : undefined,
    },
    twitter: {
      card: 'summary_large_image',
      title: seoConfig?.siteTitle,
      description: seoConfig?.metaDescription,
      images: seoConfig?.twitterImage?.asset?.url ? [seoConfig.twitterImage.asset.url] : undefined,
    },
    alternates: {
      canonical: seoConfig?.canonicalUrl,
    },
    icons: {
      icon: seoConfig?.favicon?.asset?.url || "/favicon.ico",
    },
  };
}


export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        {children}
      </body>
    </html>
  );
}
